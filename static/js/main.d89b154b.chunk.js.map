{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","heigh","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","data","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","input","models","predict","FACE_DETECT_MODEL","console","log","count","Object","assign","catch","err","route","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d89b154b.chunk.js","sourcesContent":["import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n      return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n        </nav>\n      );\n    } else {\n      return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n        </nav>\n      );\n    }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('http://localhost:3000/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('http://localhost:3000/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/brain.da59baac.png\";","import React, {Component} from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './brain.png';\n\nconst Logo = () =>{\n\treturn (\n\t\t<div className = 'ma4 mt0'>\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n \t\t\t<div className=\"Tilt-inner pa3\">\n \t\t \t<img style={{paddingTop:'5px'}} alt = 'logo' src={brain}/> \n \t\t\t</div>\n\t\t\t</Tilt>\n\t\t</div>\n\t\t);\n\n}\nexport default Logo;","import React, {Component} from 'react';\nimport './ImageLinkForm.css'\n\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) =>{\n\treturn (\n\t\t<div>\n\t\t<p className = 'f3'>\n\t\t{'Detect button will detect faces in your pictures. Give it a try!'}\n\t\t</p>\n\t\t<div className='center'>\n\t\t\t<div className = 'form center pa4 br3 shadow-5'>\n\t\t\t\t<input className ='f4 pa2 w-70 center' type = 'tex' onChange = {onInputChange} />\n\t\t\t\t<button \n\t\t\t\tclassName = 'w-30 grow f4 link ph3 pv2 dib white bg-pink'\n\t\t\t\tonClick={onButtonSubmit}\n\t\t\t\t>Detect</button>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\n\n\n\n\n\t\t</div>\n\t\t);\n\n}\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className='white f3'>\n        {`${name}, your current entry count is...`}\n      </div>\n      <div className='white f1'>\n        {entries}\n      </div>\n    </div>\n  );\n}\n\nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n//You must add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n apiKey: '9df4645b8d044618bc985d90165f1959'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'home',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n        // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n        // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n        // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n        // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n        // so you would change from:\n        // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n        // to:\n        // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}